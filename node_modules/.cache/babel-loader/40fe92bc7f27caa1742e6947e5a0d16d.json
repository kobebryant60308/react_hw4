{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\77393\\\\Desktop\\\\quiz5\\\\src\\\\github_user.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserGithub extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      username: '',\n      githubtUrl: '',\n      avatarUrl: '',\n      userid: ''\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    $.get('this.props.source').then(result => {\n      const data = result;\n\n      if (this._isMounted) {\n        this.setState({\n          userid: data.id,\n          username: data.login,\n          githubtUrl: data.html_url,\n          avatarUrl: data.avatar_url\n        });\n      }\n    }); // $.get(this.props.source, (result) => {\n    //     console.log(result);\n    //     const data = result;\n    //     if (this._isMounted) {\n    //         this.setState({\n    //             userid: data.id,\n    //             username: data.login,\n    //             githubtUrl: data.html_url,\n    //             avatarUrl: data.avatar_url\n    //         });\n    //     }\n    // });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.avatarUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"name:\", this.state.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: this.state.userid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.state.githubtUrl,\n        children: \"Github Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(UserGithub, {\n  source: \"https://api.github.com/users/STARZ333\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nexport default UserGithub;","map":{"version":3,"sources":["C:/Users/77393/Desktop/quiz5/src/github_user.js"],"names":["React","ReactDOM","$","UserGithub","Component","constructor","props","_isMounted","state","username","githubtUrl","avatarUrl","userid","componentDidMount","get","then","result","data","setState","id","login","html_url","avatar_url","componentWillUnmount","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AACA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAGrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAFnBC,UAEmB,GAFN,KAEM;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,UAAL,GAAkB,IAAlB;AAGIL,IAAAA,CAAC,CAACY,GAAF,CAAM,mBAAN,EACCC,IADD,CACMC,MAAM,IAAI;AACZ,YAAMC,IAAI,GAAGD,MAAb;;AACA,UAAI,KAAKT,UAAT,EAAqB;AACjB,aAAKW,QAAL,CAAc;AACVN,UAAAA,MAAM,EAAEK,IAAI,CAACE,EADH;AAEVV,UAAAA,QAAQ,EAAEQ,IAAI,CAACG,KAFL;AAGVV,UAAAA,UAAU,EAAEO,IAAI,CAACI,QAHP;AAIVV,UAAAA,SAAS,EAAEM,IAAI,CAACK;AAJN,SAAd;AAMH;AACJ,KAXD,EAJY,CAkBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKhB,UAAL,GAAkB,KAAlB;AACH;;AACDiB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWG;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,4BAAU,KAAKH,KAAL,CAAWC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAK,KAAKD,KAAL,CAAWI;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAG,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxDoC;;AA0DzCT,QAAQ,CAACuB,MAAT,eACI,QAAC,UAAD;AAAY,EAAA,MAAM,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;AAIA,eAAevB,UAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport $ from 'jquery';\r\nclass UserGithub extends React.Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            githubtUrl: '',\r\n            avatarUrl: '',\r\n            userid: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n\r\n       \r\n            $.get('this.props.source')\r\n            .then(result => {\r\n                const data = result;\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        userid: data.id,\r\n                        username: data.login,\r\n                        githubtUrl: data.html_url,\r\n                        avatarUrl: data.avatar_url,\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n        // $.get(this.props.source, (result) => {\r\n        //     console.log(result);\r\n        //     const data = result;\r\n        //     if (this._isMounted) {\r\n        //         this.setState({\r\n        //             userid: data.id,\r\n        //             username: data.login,\r\n        //             githubtUrl: data.html_url,\r\n        //             avatarUrl: data.avatar_url\r\n        //         });\r\n        //     }\r\n        // });\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.state.avatarUrl} />\r\n                <h3>name:{this.state.username}</h3>\r\n                <h6>{this.state.userid}</h6>\r\n                <a href={this.state.githubtUrl}>Github Link</a>.\r\n            </div>\r\n        );\r\n    }\r\n}\r\nReactDOM.render(\r\n    <UserGithub source=\"https://api.github.com/users/STARZ333\" />,\r\n    document.getElementById('root')\r\n);\r\nexport default UserGithub;"]},"metadata":{},"sourceType":"module"}